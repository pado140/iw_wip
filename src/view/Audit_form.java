/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import connection.ConnectionDb;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Padovano
 */
public class Audit_form extends javax.swing.JInternalFrame {
private final ConnectionDb conn = ConnectionDb.instance();
private Map<Object,Integer> list;
private int batch_id;
    /**
     * Creates new form Audit_form
     */
    public Audit_form() {
        initComponents();
        init();
    }

    private void init(){
        batch.setModel(new javax.swing.DefaultComboBoxModel(loadBatches()));
        DefaultTableModel tbm = (DefaultTableModel) grid_data.getModel();
        tbm.setRowCount(0);
        jButton1.setEnabled(false);
        passall.setEnabled(false);
    }
    
    private void loadData(int critere){
        
        DefaultTableModel tbm = (DefaultTableModel) grid_data.getModel();
        tbm.setRowCount(0);
        String requete="select * from lpn_in_batch where batch_id=?";
        ResultSet rs=conn.select(requete, critere);
    try {
        while(rs.next()){
            tbm.addRow(new Object[]{rs.getString("ponum"),rs.getString("style"),rs.getString("sku").replace(".", "-").split("-")[1],
            rs.getString("coldsp"),rs.getString("size"),rs.getInt("qty"),rs.getString("description"),rs.getString("lpn"),false,rs.getInt("lpn_id"),rs.getInt("id")});
        }
    } catch (SQLException ex) {
        Logger.getLogger(Audit_form.class.getName()).log(Level.SEVERE, null, ex);
    }
    if(grid_data.getRowCount()>0){
        jButton1.setEnabled(true);
        passall.setEnabled(true);
    }else{
        jButton1.setEnabled(false);
        passall.setEnabled(false);
    }
    }
    
    private Object[] loadBatches(){
        list=new HashMap<>();
        Object[] ob;
        String requete="select * from batches where status='packed'";
        ResultSet rs=conn.select(requete);
    try {
        list.put("--selected--",0);
        while(rs.next()){
            list.put("Bacth No "+rs.getInt("id"),rs.getInt("id"));
        }
    } catch (SQLException ex) {
        Logger.getLogger(Audit_form.class.getName()).log(Level.SEVERE, null, ex);
    }
        ob=new Object[list.size()];
        ob=list.keySet().toArray(ob);
        return ob;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        batch = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        passall = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        grid_data = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Audit");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameDeiconified(evt);
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jLabel1.setText("Select Batch:");

        batch.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        batch.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                batchItemStateChanged(evt);
            }
        });

        jButton1.setText("CONFIRM");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        passall.setText("PASS ALL");
        passall.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                passallItemStateChanged(evt);
            }
        });
        passall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passallActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(batch, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 355, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(194, 194, 194))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(passall)
                .addGap(43, 43, 43))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(batch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(passall)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        grid_data.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "PO", "STYLE", "COLOR_CODE", "COLOR", "SIZE", "QTY", "DESCRIPTION", "LPN", "PASS/FAIL", "lpn_id", "id"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, true, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        grid_data.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                grid_dataMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(grid_data);
        if (grid_data.getColumnModel().getColumnCount() > 0) {
            grid_data.getColumnModel().getColumn(0).setResizable(false);
            grid_data.getColumnModel().getColumn(1).setResizable(false);
            grid_data.getColumnModel().getColumn(2).setResizable(false);
            grid_data.getColumnModel().getColumn(3).setResizable(false);
            grid_data.getColumnModel().getColumn(4).setResizable(false);
            grid_data.getColumnModel().getColumn(5).setResizable(false);
            grid_data.getColumnModel().getColumn(6).setResizable(false);
            grid_data.getColumnModel().getColumn(7).setResizable(false);
            grid_data.getColumnModel().getColumn(8).setResizable(false);
            grid_data.getColumnModel().getColumn(9).setMinWidth(0);
            grid_data.getColumnModel().getColumn(9).setMaxWidth(0);
            grid_data.getColumnModel().getColumn(10).setMinWidth(0);
            grid_data.getColumnModel().getColumn(10).setMaxWidth(0);
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 429, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void batchItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_batchItemStateChanged
        // TODO add your handling code here:
        passall.setSelected(false);
        batch_id=list.get(evt.getItem());
        loadData(list.get(evt.getItem()));
    }//GEN-LAST:event_batchItemStateChanged

    private void passallItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_passallItemStateChanged
        // TODO add your handling code here:
        
    }//GEN-LAST:event_passallItemStateChanged

    private void grid_dataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grid_dataMouseClicked
        // TODO add your handling code here:
        boolean check=true;
        if(grid_data.getSelectedColumn()==grid_data.getColumnCount()-3){
            for(int i=0;i<grid_data.getRowCount();i++){
                if((Boolean)grid_data.getValueAt( i, grid_data.getColumnCount()-3)==false){
                    check=false;
                }
                }
            if(!check){
                if(passall.isSelected())
                    passall.setSelected(false);
            }else{
                if(!passall.isSelected())
                    passall.setSelected(true);
            }
        }
    }//GEN-LAST:event_grid_dataMouseClicked

    private void passallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passallActionPerformed
        // TODO add your handling code here:
        if(passall.isSelected()){
            for(int i=0;i<grid_data.getRowCount();i++){
                grid_data.setValueAt(true, i, grid_data.getColumnCount()-3);
            }
        }else{
            for(int i=0;i<grid_data.getRowCount();i++){
                grid_data.setValueAt(false, i, grid_data.getColumnCount()-3);
                }
        }
    }//GEN-LAST:event_passallActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        int confirmation=JOptionPane.showConfirmDialog(this, "Are you sure, those informations are corrected?", "Confirm",
                JOptionPane.YES_NO_OPTION);
        if(confirmation==JOptionPane.YES_OPTION){
            for(int i=0;i<grid_data.getRowCount();i++){
                Audit(Integer.parseInt(grid_data.getValueAt( i, grid_data.getColumnCount()-1).toString()),
                        Integer.parseInt(grid_data.getValueAt( i, grid_data.getColumnCount()-2).toString()),
                        (Boolean)grid_data.getValueAt( i, grid_data.getColumnCount()-3));
                    
                
                }
            String requete="update batches set status='Audited' ";
            requete+= !passall.isSelected()?",fail=fail+1 ":"";
             conn.Update(requete+"where id=?", 0, batch_id);
            JOptionPane.showMessageDialog(this, "save successfully");
            init();
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated
        // TODO add your handling code here:
        init();
    }//GEN-LAST:event_formInternalFrameActivated

    private void formInternalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameDeiconified
        // TODO add your handling code here:
        init();
    }//GEN-LAST:event_formInternalFrameDeiconified

    private void Audit(int lbid,int lpid,boolean check){
        String requete="update batches_lpn set status=? where id=?";
        String status="fail";
        
        String requete1="update box_contain set status=? where id=?";
        
        if(check){
           status="pass";
           conn.Update(requete1, 0,2,lpid);
        }else{
           conn.Update(requete1, 0,0,lpid);
        }
        conn.Update(requete, 0,status, lbid);
        conn.Update("update packing set is_approved=?,modified=getDate() where box_stickers=(select box_stickers from box_contain where id=?)", 0,status.equals("fail")?0:1, lpid);
        conn.Update("update packing_approved set is_approved=?,modified=getDate() where box_stickers=(select box_stickers from box_contain where id=?)", 0,status.equals("fail")?0:1, lpid);
       
        
       
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox batch;
    private javax.swing.JTable grid_data;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JCheckBox passall;
    // End of variables declaration//GEN-END:variables
}
